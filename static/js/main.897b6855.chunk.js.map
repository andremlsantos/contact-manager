{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NouFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","console","log","Axios","get","res","this","data","value","children","Component","Consumer","Contact","onShowClick","showContactInfo","onDeleteClick","a","delete","error","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","deleteContact","newContacts","Fragment","key","deleteClickHandler","TextInputGroup","label","placeholder","onChange","htmlFor","classnames","protoTypes","PropTypes","string","isRequired","func","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","NouFound","EditContact","updContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"iQAIe,SAASA,EAAOC,GAAQ,IAC3BC,EAAaD,EAAbC,SACR,OACI,yBAAKC,UAAU,2DACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAClBD,GAEL,6BACI,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YACnB,uBAAGA,UAAU,eAAb,KADJ,UAIJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,YAC9B,uBAAGA,UAAU,eAAb,KADJ,SAIJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YACxB,uBAAGA,UAAU,mBAAb,KADJ,eAW5BH,EAAOK,aAAe,CAClBH,SAAU,U,6DClCRI,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAO,2BACAF,GADP,IAEIG,SAAUH,EAAMG,SAASC,QACrB,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOM,aAG/C,IAAK,cACD,OAAO,2BACAP,GADP,IAEIG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAE5C,IAAK,iBACD,OAAO,2BACAH,GADP,IAEIG,SAAUH,EAAMG,SAASK,KAAI,SAACH,GAAD,OACzBA,EAAQC,IAAML,EAAOM,QAAQD,GACtBD,EAAUJ,EAAOM,QAClBF,OAGlB,QACI,OAAOL,IAINS,EAAb,4MACIT,MAAQ,CACJG,SAAU,GACVO,SAAU,SAACT,GAAD,OAAY,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQC,EAAOC,QAHtE,yLAOQW,QAAQC,IAAI,qBAPpB,SAQ0BC,IAAMC,IACpB,8CATZ,OAQcC,EARd,OAYQC,KAAKN,SAAS,CAAER,SAAUa,EAAIE,OAZtC,qIAgBQ,OACI,kBAACtB,EAAQa,SAAT,CAAkBU,MAAOF,KAAKjB,OACzBiB,KAAK1B,MAAM6B,cAlB5B,GAA8BC,aAwBjBC,EAAW1B,EAAQ0B,SCnDXC,E,kDACjB,aAAe,IAAD,8BACV,gBAOJC,YAAc,WACV,EAAKb,SAAS,CAAEc,iBAAkB,EAAKzB,MAAMyB,mBATnC,EAYdC,cAZc,uCAYE,WAAOpB,EAAII,GAAX,SAAAiB,EAAA,+EAEFb,IAAMc,OAAN,qDAC4CtB,IAH1C,OAKRI,EAAS,CACLR,KAAM,iBACNK,QAASD,IAPL,+CAURM,QAAQiB,MAAR,MAVQ,wDAZF,wDAGV,EAAK7B,MAAQ,CACTyB,iBAAiB,GAJX,E,4DA0BEA,EAAiBK,EAAMC,EAAOC,GAC1C,OAAIP,EAEI,wBAAIhC,UAAU,cACV,wBAAIA,UAAU,mBAAd,UAAwCsC,GACxC,wBAAItC,UAAU,mBAAd,UAAwCuC,IAIzC,O,+BAIL,IAAD,SAC8Bf,KAAK1B,MAAMc,QAAtCC,EADH,EACGA,GAAIwB,EADP,EACOA,KAAMC,EADb,EACaA,MAAOC,EADpB,EACoBA,MACjBP,EAAoBR,KAAKjB,MAAzByB,gBAER,OACI,kBAACH,EAAD,MACK,SAACH,GAAW,IACDT,EAAaS,EAAbT,SAER,OACI,yBAAKjB,UAAU,uBACX,4BACKqC,EACD,uBACIrC,UAAU,mBACVwC,QAAS,EAAKT,YACdU,MAAO,CAAEC,OAAQ,aAErB,uBACI1C,UAAU,eACVyC,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,OAEXJ,QAAS,EAAKP,cAAcY,KACxB,EACAhC,EACAI,KAGR,kBAAC,IAAD,CAAMhB,GAAE,uBAAkBY,IACtB,uBACIb,UAAU,oBACVyC,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPE,YAAa,YAK5B,EAAKd,gBACFA,EACAK,EACAC,EACAC,W,GAvFKX,aAiGrCE,EAAQ5B,aAAe,CACnBmC,KAAM,WACNC,MAAO,oBACPC,MAAO,gB,ICtGUQ,E,4MACjBC,cAAgB,SAACnC,GAAQ,IAGfoC,EAFe,EAAK1C,MAAlBG,SAEqBC,QAAO,SAACC,GAAD,OAAaA,EAAQC,KAAOA,KAEhE,EAAKK,SAAS,CACVR,SAAUuC,K,uDAIR,IAAD,OACL,OACI,kBAACpB,EAAD,MACK,SAACH,GAAW,IACDhB,EAAagB,EAAbhB,SAER,OACI,kBAAC,IAAMwC,SAAP,KACI,wBAAIlD,UAAU,kBACV,0BAAMA,UAAU,eAAhB,WAA6C,IADjD,QAICU,EAASK,KAAI,SAACH,GAAD,OACV,kBAAC,EAAD,CACIuC,IAAKvC,EAAQC,GACbD,QAASA,EACTwC,mBAAoB,EAAKJ,cAAcH,KACnC,EACAjC,EAAQC,iB,GA7BVe,a,0CCAvB,SAASyB,EAAT,GAQX,IAPAC,EAOD,EAPCA,MACAjB,EAMD,EANCA,KACAX,EAKD,EALCA,MACA6B,EAID,EAJCA,YACA9C,EAGD,EAHCA,KACA+C,EAED,EAFCA,SACApB,EACD,EADCA,MAEA,OACI,yBAAKpC,UAAU,cACX,2BAAOyD,QAASpB,GAAOiB,GACvB,2BACI7C,KAAMA,EACN4B,KAAMA,EACNrC,UAAW0D,IAAW,+BAAgC,CAClD,aAActB,EACd,eAAaA,IAEjBmB,YAAaA,EAEb7B,MAAOA,EACP8B,SAAUA,IAEbpB,GAAS,yBAAKpC,UAAU,oBAAoBoC,IAKzDiB,EAAeM,WAAa,CACxBL,MAAOM,IAAUC,OAAOC,WACxBzB,KAAMuB,IAAUC,OAAOC,WACvBpC,MAAOkC,IAAUC,OAAOC,WACxBP,YAAaK,IAAUC,OAAOC,WAC9BN,SAAUI,IAAUG,KAAKD,WACzB1B,MAAOwB,IAAUC,QAGrBR,EAAenD,aAAe,CAC1BO,KAAM,Q,ICrCWuD,E,4MACjBzD,MAAQ,CACJ8B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0B,OAAQ,I,EAGZT,SAAW,SAACU,GACR,EAAKhD,SAAL,eACKgD,EAAEC,OAAO9B,KAAO6B,EAAEC,OAAOzC,S,EAIlC0C,S,uCAAW,WAAOnD,EAAUiD,GAAjB,yBAAAhC,EAAA,yDACPgC,EAAEG,iBADK,EAGwB,EAAK9D,MAA5B8B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAGR,KAATF,EANG,uBAOH,EAAKnB,SAAS,CACV+C,OAAQ,CACJ5B,KAAM,sBATX,6BAeO,KAAVC,EAfG,uBAgBH,EAAKpB,SAAS,CACV+C,OAAQ,CACJ3B,MAAO,uBAlBZ,6BAwBO,KAAVC,EAxBG,wBAyBH,EAAKrB,SAAS,CACV+C,OAAQ,CACJ1B,MAAO,uBA3BZ,kCAiCD+B,EAAa,CACfjC,OACAC,QACAC,SApCG,UAuCWlB,IAAMkD,KACpB,8CACAD,GAzCG,QAuCD/C,EAvCC,OA4CPN,EAAS,CACLR,KAAM,cACNK,QAASS,EAAIE,OAGjB,EAAKP,SAAS,CACVmB,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0B,OAAQ,KAGZ,EAAKnE,MAAM0E,QAAQC,KAAK,KAxDjB,4C,+GA2DD,IAAD,SACkCjD,KAAKjB,MAApC8B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAO0B,EADvB,EACuBA,OAE5B,OACI,kBAACpC,EAAD,MACK,SAACH,GAAW,IACDT,EAAaS,EAAbT,SAER,OACI,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,eAAf,cAEI,yBAAKA,UAAU,aACX,0BACIoE,SAAU,EAAKA,SAASvB,KACpB,EACA5B,IAGJ,kBAACoC,EAAD,CACIC,MAAM,OACNjB,KAAK,OACLkB,YAAY,qBACZ7B,MAAOW,EACPD,MAAO6B,EAAO5B,KACdmB,SAAU,EAAKA,WAEnB,kBAACH,EAAD,CACIC,MAAM,QACNjB,KAAK,QACL5B,KAAK,QACL8C,YAAY,sBACZ7B,MAAOY,EACPF,MAAO6B,EAAO3B,MACdkB,SAAU,EAAKA,WAEnB,kBAACH,EAAD,CACIC,MAAM,QACNjB,KAAK,QACLkB,YAAY,sBACZ7B,MAAOa,EACPH,MAAO6B,EAAO1B,MACdiB,SAAU,EAAKA,WAEnB,2BACI/C,KAAK,SACLT,UAAU,yC,GAvHd4B,aCJzB,SAAS8C,IACpB,OACI,6BACI,wBAAI1E,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,iCACA,uBAAGA,UAAU,kBAAb,kB,YCLG,SAAS2E,IACpB,OACI,6BACI,wBAAI3E,UAAU,aACV,0BAAMA,UAAU,eAAhB,OADJ,mBAGA,+D,ICHS4E,E,4MACjBrE,MAAQ,CACJ8B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0B,OAAQ,I,EAkBZT,SAAW,SAACU,GACR,EAAKhD,SAAL,eACKgD,EAAEC,OAAO9B,KAAO6B,EAAEC,OAAOzC,S,EAIlC0C,S,uCAAW,WAAOnD,EAAUiD,GAAjB,2BAAAhC,EAAA,yDACPgC,EAAEG,iBADK,EAGwB,EAAK9D,MAA5B8B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAGR,KAATF,EANG,uBAOH,EAAKnB,SAAS,CAAE+C,OAAQ,CAAE5B,KAAM,sBAP7B,6BAWO,KAAVC,EAXG,uBAYH,EAAKpB,SAAS,CAAE+C,OAAQ,CAAE3B,MAAO,uBAZ9B,6BAgBO,KAAVC,EAhBG,wBAiBH,EAAKrB,SAAS,CAAE+C,OAAQ,CAAE1B,MAAO,uBAjB9B,kCAqBDsC,EAAa,CACfxC,OACAC,QACAC,SAGI1B,EAAO,EAAKf,MAAMgF,MAAMC,OAAxBlE,GA3BD,UA4BWQ,IAAM2D,IAAN,qDACgCnE,GAC9CgE,GA9BG,QA4BDtD,EA5BC,OAiCPN,EAAS,CAAER,KAAM,iBAAkBK,QAASS,EAAIE,OAGhD,EAAKP,SAAS,CACVmB,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0B,OAAQ,KAGZ,EAAKnE,MAAM0E,QAAQC,KAAK,KA3CjB,4C,qPApBC5D,EAAOW,KAAK1B,MAAMgF,MAAMC,OAAxBlE,G,SACUQ,IAAMC,IAAN,qDACgCT,I,OAD5CU,E,OAIAX,EAAUW,EAAIE,KAEpBD,KAAKN,SAAS,CACVmB,KAAMzB,EAAQyB,KACdC,MAAO1B,EAAQ0B,MACfC,MAAO3B,EAAQ2B,Q,qIAwDb,IAAD,SACkCf,KAAKjB,MAApC8B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAO0B,EADvB,EACuBA,OAE5B,OACI,kBAACpC,EAAD,MACK,SAACH,GAAW,IACDT,EAAaS,EAAbT,SAER,OACI,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,eAAf,eAEI,yBAAKA,UAAU,aACX,0BACIoE,SAAU,EAAKA,SAASvB,KACpB,EACA5B,IAGJ,kBAACoC,EAAD,CACIC,MAAM,OACNjB,KAAK,OACLkB,YAAY,qBACZ7B,MAAOW,EACPD,MAAO6B,EAAO5B,KACdmB,SAAU,EAAKA,WAEnB,kBAACH,EAAD,CACIC,MAAM,QACNjB,KAAK,QACL5B,KAAK,QACL8C,YAAY,sBACZ7B,MAAOY,EACPF,MAAO6B,EAAO3B,MACdkB,SAAU,EAAKA,WAEnB,kBAACH,EAAD,CACIC,MAAM,QACNjB,KAAK,QACLkB,YAAY,sBACZ7B,MAAOa,EACPH,MAAO6B,EAAO1B,MACdiB,SAAU,EAAKA,WAEnB,2BACI/C,KAAK,SACLT,UAAU,yC,GAzHb4B,aCwC1BqD,E,uKA7BP,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,yBAAKjF,UAAU,OACX,kBAACH,EAAD,CAAQE,SAAS,oBACjB,yBAAKC,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,IAAIC,UAAWrC,IACjC,kBAAC,IAAD,CACImC,OAAK,EACLC,KAAK,eACLC,UAAWpB,IAEf,kBAAC,IAAD,CACIkB,OAAK,EACLC,KAAK,oBACLC,UAAWR,IAEf,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,SAASC,UAAWV,IACtC,kBAAC,IAAD,CAAOQ,OAAK,EAACE,UAAWT,a,GArBtC/C,aCFEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASV,MACvB,2DCbNW,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SD0HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhE,GACLjB,QAAQiB,MAAMA,EAAMiE,c","file":"static/js/main.897b6855.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header(props) {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"> </i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"> </i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"> </i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    (contact) => contact.id !== action.payload\r\n                ),\r\n            };\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts],\r\n            };\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map((contact) =>\r\n                    contact.id == action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact\r\n                ),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n    };\r\n\r\n    async componentDidMount() {\r\n        console.log(\"componentDidMount\");\r\n        const res = await Axios.get(\r\n            \"https://jsonplaceholder.typicode.com/users\"\r\n        );\r\n\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Contact extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showContactInfo: false,\r\n        };\r\n    }\r\n\r\n    onShowClick = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await Axios.delete(\r\n                `https://jsonplaceholder.typicode.com/users/${id}`\r\n            );\r\n            dispatch({\r\n                type: \"DELETE_CONTACT\",\r\n                payload: id,\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    showContactInfo(showContactInfo, name, email, phone) {\r\n        if (showContactInfo) {\r\n            return (\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}\r\n                                <i\r\n                                    className=\"fas fa-sort-down\"\r\n                                    onClick={this.onShowClick}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                ></i>\r\n                                <i\r\n                                    className=\"fas fa-times\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        float: \"right\",\r\n                                        color: \"red\",\r\n                                    }}\r\n                                    onClick={this.onDeleteClick.bind(\r\n                                        this,\r\n                                        id,\r\n                                        dispatch\r\n                                    )}\r\n                                ></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            float: \"right\",\r\n                                            color: \"black\",\r\n                                            marginRight: \"1rem\",\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {this.showContactInfo(\r\n                                showContactInfo,\r\n                                name,\r\n                                email,\r\n                                phone\r\n                            )}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.defaultProps = {\r\n    name: \"Username\",\r\n    email: \"username@mail.com\",\r\n    phone: \"111-111-1111\",\r\n};\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n    deleteClickHandler: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class Contacts extends Component {\r\n    deleteContact = (id) => {\r\n        const { contacts } = this.state;\r\n\r\n        const newContacts = contacts.filter((contact) => contact.id !== id);\r\n\r\n        this.setState({\r\n            contacts: newContacts,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { contacts } = value;\r\n\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span>{\" \"}\r\n                                List\r\n                            </h1>\r\n                            {contacts.map((contact) => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                    deleteClickHandler={this.deleteContact.bind(\r\n                                        this,\r\n                                        contact.id\r\n                                    )}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default function TextInputGroup({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error,\r\n}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error,\r\n                    \"ïs-valid\": !error,\r\n                })}\r\n                placeholder={placeholder}\r\n                // required\r\n                value={value}\r\n                onChange={onChange}\r\n            ></input>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTextInputGroup.protoTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: \"text\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {},\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // check for errors\r\n        if (name === \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    name: \"Name is required\",\r\n                },\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (email === \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    email: \"Email is required\",\r\n                },\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (phone === \"\") {\r\n            this.setState({\r\n                errors: {\r\n                    phone: \"Phone is required\",\r\n                },\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        const res = await Axios.post(\r\n            \"https://jsonplaceholder.typicode.com/users/\",\r\n            newContact\r\n        );\r\n\r\n        dispatch({\r\n            type: \"ADD_CONTACT\",\r\n            payload: res.data,\r\n        });\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {},\r\n        });\r\n\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                                <div className=\"card-body\">\r\n                                    <form\r\n                                        onSubmit={this.onSubmit.bind(\r\n                                            this,\r\n                                            dispatch\r\n                                        )}\r\n                                    >\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter a valid name\"\r\n                                            value={name}\r\n                                            error={errors.name}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter a valid email\"\r\n                                            value={email}\r\n                                            error={errors.email}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter a valid phone\"\r\n                                            value={phone}\r\n                                            error={errors.phone}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        <input\r\n                                            type=\"Submit\"\r\n                                            className=\"btn btn-primary btn-block\"\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NouFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404</span> Page Not Found\r\n            </h1>\r\n            <p>Sorry, that page was not found!</p>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class EditContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {},\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await Axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check For Errors\r\n        if (name === \"\") {\r\n            this.setState({ errors: { name: \"Name is required\" } });\r\n            return;\r\n        }\r\n\r\n        if (email === \"\") {\r\n            this.setState({ errors: { email: \"Email is required\" } });\r\n            return;\r\n        }\r\n\r\n        if (phone === \"\") {\r\n            this.setState({ errors: { phone: \"Phone is required\" } });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await Axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            updContact\r\n        );\r\n\r\n        dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {},\r\n        });\r\n\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n                                <div className=\"card-body\">\r\n                                    <form\r\n                                        onSubmit={this.onSubmit.bind(\r\n                                            this,\r\n                                            dispatch\r\n                                        )}\r\n                                    >\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter a valid name\"\r\n                                            value={name}\r\n                                            error={errors.name}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter a valid email\"\r\n                                            value={email}\r\n                                            error={errors.email}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter a valid phone\"\r\n                                            value={phone}\r\n                                            error={errors.phone}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        <input\r\n                                            type=\"Submit\"\r\n                                            className=\"btn btn-primary btn-block\"\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NouFound from \"./components/pages/NouFound\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts} />\n                                <Route\n                                    exact\n                                    path=\"/contact/add\"\n                                    component={AddContact}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/contact/edit/:id\"\n                                    component={EditContact}\n                                />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route exact component={NouFound} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}